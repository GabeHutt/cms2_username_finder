#!/usr/bin/python3

import socket
import sys
import argparse
import threading
import pathlib
import tempfile

description = """
Login Post Request Sender\n
Takes in URL/IP, Num Concurrent Requests, Wordlist Path, HTML to find\n
"""
parser = argparse.ArgumentParser(prog='Username Finder', description=description, )
parser.add_argument('-u', '--url', required=True, type=str, help="Url For POST request")
parser.add_argument('-c', '--concurrency', required=True, type=int, help="number of concurrent requests to make")
parser.add_argument('-w', '--wordlist', required=True, type=str, help="Path to wordlist")
parser.add_argument('-s', '--stringtofind', required=True, type=str, help="String to find in HTTP response to signal username found")
parser.add_argument('-e', '--earlystop', required=True, type=bool, help="Stop on first username found")
args = parser.parse_args()

def main():
    file_path = pathlib.Path(args.wordlist)

    if file_path.exists():
        split_wordlist(file_path, args.concurrency)
    else:
        print("File not found.")

def split_wordlist(filename, num_threads):
    with open(filename, 'r') as f:
        lines = f.readlines()

    total_lines = len(lines)
    chunk_size = (total_lines + num_threads - 1) // num_threads  # ceil divide
    threads = []

    for i in range(num_threads):
        start = i * chunk_size
        end = min(start + chunk_size, total_lines)
        t = threading.Thread(target=process_words, args=(lines[start:end], i))
        threads.append(t)
        t.start()

    for t in threads:
        t.join()




if __name__ == '__main__':
    main()

